#
# Copyright (c) 2008-2022 the Urho3D project.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#

---

name: CI/CD
on:
  push:
  pull_request:
  repository_dispatch: { types: [ 'Warm DBE build cache' ] }
jobs:
  init:
    name: Init
    runs-on: ubuntu-22.04
    outputs:
      skip: ${{ steps.whatchanged.outputs.skip }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: What changed
        id: whatchanged
        run: |
          git fetch --deepen=1
          git log --raw --no-merges -1 |grep '^:' >/tmp/whatchanged
  mingw:
    name: ðŸ’ 
    runs-on: windows-2022
    needs: init
    if: needs.init.outputs.skip == '0' && github.event_name != 'repository_dispatch'
    strategy:
      fail-fast: false
      matrix:
        platform:
          - mingw
        build_type:
          - Release
          #- Debug
        lib_type:
          - STATIC
          - SHARED
        graphics-api:
          - D3D9
          - D3D11
          - OPENGL
        include:
          - { sys: mingw64, env: x86_64 }
          - { sys: mingw32, env: i686 }
    defaults:
      run:
        shell: msys2 {0}
    env:
      HOST: ${{ github.job }}
      PLATFORM: ${{ matrix.platform }}
      LIB_TYPE: ${{ matrix.lib_type }}
      GRAPHICS_API: ${{ matrix.graphics-api }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: { fetch-depth: 0 }
      - name: 'Setup MSYS2'
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{matrix.sys}}
          update: false
          install: >-
            git
            make
          pacboy: >-
            toolchain:p
            cmake:p
            ninja:p
      - name: Build Dir
        shell: bash
        run: |
          mkdir build
          mkdir instdir
      - name: Generate DirectX9
        if: matrix.graphics-api == 'D3D9'
        run: cmake -G "MSYS Makefiles" -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DURHO3D_LIB_TYPE=${{ matrix.lib_type }} -DURHO3D_OPENGL=FALSE -DURHO3D_D3D11=FALSE
      - name: Generate DirectX11
        if: matrix.graphics-api == 'D3D11'
        run: cmake -G "MSYS Makefiles" -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DURHO3D_LIB_TYPE=${{ matrix.lib_type }} -DURHO3D_OPENGL=FALSE -DURHO3D_D3D11=TRUE
      - name: Generate OpenGL
        if: matrix.graphics-api == 'OPENGL'
        run: cmake -G "MSYS Makefiles" -S . -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DURHO3D_LIB_TYPE=${{ matrix.lib_type }} -DURHO3D_OPENGL=TRUE -DURHO3D_D3D11=FALSE
      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}
      - name: Install
        run: cmake --install build --prefix instdir
...
